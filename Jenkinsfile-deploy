pipeline {
    agent any
    
    
    stages {
        stage('Checkout') {
            steps {
                git branch: 'deploy',url: 'https://github.com/UnaxMendi/myinsuranceapp-rincy.git'
            }
        }        
        stage('Requirements') {
            steps {
                echo 'Installing dependencies...'
                sh 'pip3 install -r requirements.txt'
                sh 'python3 project/init/init_db.py'
            }
        }
        stage('Unit/Integration tests') {
            steps {
                echo 'Unit/Integration...'
                sh 'python3 -m unittest discover -s tests/unit -v'
            }
        }        
        stage('Acceptance tests') {
            steps {
                echo 'Acceptance...'
                sh 'python3 -m unittest discover -s tests/acceptance-flask -v'
            }
        }     
        stage('Create image') {
            steps {
                echo 'creating image...'
                sh 'docker build -t 618383339/myinsuranceapp -f Dockerfile .'
                //sh 'docker build -t risunmyinsuranceapp.azurecr.io/myinsuranceapp:v3 -f Dockerfile . .'
            }
        } 
        stage('Publish image') {
            steps {
                echo 'pushing image..'
                withDockerRegistry([ credentialsId: "docker-hub-credentials", url: "" ]) {
                    sh 'docker push 618383339/myinsuranceapp'
                }
                //withDockerRegistry([ credentialsId: "acr-credentials", url: "risunmyinsuranceapp.azurecr.io" ]) {
                //    sh 'docker push risunmyinsuranceapp.azurecr.io/myinsuranceapp:v3'
                //}
            }
        }
        stage('Apply Kubernetes ') {
            steps {
                withKubeConfig([credentialsId: 'k8-credentials',serverUrl:'https://joint-macaw-k8s-307b998b.hcp.eastasia.azmk8s.io']) {
                    sh 'kubectl apply -f kubernetes/risun_dp.yaml'
                    sh 'kubectl apply -f kubernetes/risun_svc.yaml'
                    sh 'kubectl port-forward service/myinsuranceapp 5000:5000 &'
                    sleep 5 // give 5 secs to stablish the prot forward
                }
            }
        }
        stage('External acceptance tests') {
            steps{
                echo 'External acceptance tests...'
                sh 'python3 -m unittest discover -s tests/acceptance-request -v'
                //sh 'pkill -f "port-forward"'
            }
        }
    }
    post {
        always {
            echo 'post do this always...'
        }
        success{
            echo 'post do this when success...'
        }
        failure {
            echo 'post do this when failure...'
        }
        cleanup{
            echo 'post do this when cleanup...'
            sh 'pkill -f "port-forward"'
            deleteDir()
        }
    }
}